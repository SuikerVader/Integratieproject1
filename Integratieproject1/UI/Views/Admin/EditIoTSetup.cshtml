@using Integratieproject1.Domain.Datatypes
@using Integratieproject1.Domain.Projects
@model Integratieproject1.Domain.IoT.IoTSetup

@{
    ViewBag.Title = "Fase";
    Layout = "/UI/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div >
        <div class="text-center">
            <h2>Wijzig IoT</h2>
        </div>
        <div>

            @if (Model.Position != null)
            {
                <div class="card">
                    <div id="map"></div>
                </div>
            }
            <form class="" asp-controller="Admin" asp-action="EditIoT" method="post" asp-route-ioTId="@Model.Code"}>

                <input class="form-control" id="autocompleteIoTEdit"/>
                <label>latitude</label>
                <input class="form-control" required asp-for="Position.Lat" id="lat"/>
                <label>longitude</label>
                <input class="form-control" required asp-for="Position.Lng" id="lng"/>

                <input class="btn btn-primary btn-sm" type="submit" value="Wijzig iot">
            </form>
            <a class="btn btn-danger" asp-area="" asp-controller="Admin"
               asp-action="DeleteIoT" asp-route-iotId="@Model.Code">
                Verwijder IoT
            </a>
        </div>

    </div>


</div>
<script>
    var markers = [];
    
    function initEditIoTMap() {
        
        // The location of Uluru
        var position = {lat: @Model.Position.Lat, lng: @Model.Position.Lng};
        // The map, centered at Uluru
        var map = new google.maps.Map(
            document.getElementById('map'), {zoom: 16, center: position});
        // The marker, positioned at Uluru
        var marker = new google.maps.Marker({position: position, map: map});
        markers.push(marker);
        
        google.maps.event.addListener(map, 'click', 
            function(event) {
                changeMarker(event.latLng, map);
            });
        initEditIoTAutocomplete(map);
        
        
    }
    function initEditIoTAutocomplete(map) {
        var autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocompleteIoTEdit'));
        autocomplete.setComponentRestrictions({'country': 'be'});
        google.maps.event.addListener(autocomplete,
            'place_changed',
            function() {
                var place = autocomplete.getPlace();
                var lat = place.geometry.location.lat();
                var lng = place.geometry.location.lng();
                changeMarker(place.geometry.location,map);

            });
        
    }
    function changeMarker(coords,map) {
        clearMarkers();
        addMarker(coords, map);
        map.setCenter(coords);
        document.getElementById('lat').value = coords.lat();
        document.getElementById('lng').value = coords.lng();
    }
    function addMarker(coords, map) {
        var marker = new google.maps.Marker({ position: coords, map: map });
        markers.push(marker);
    }
    function clearMarkers() {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
            markers.pop(markers[i]);
        }
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places,drawing,geometry,visualization&key=AIzaSyBuYpAodlfpx5uWlMiFTMx3AG7DVRG-T0w&callback=initEditIoTMap">
</script>
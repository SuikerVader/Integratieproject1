@using Integratieproject1.Domain.Datatypes
@using Integratieproject1.Domain.Projects
@model Integratieproject1.Domain.IoT.IoTSetup

@{
    ViewBag.Title = "Fase";
    Layout = "/UI/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div >
        <div class="text-center">
            <h2>Voeg IoT toe</h2>
        </div>
        <div>
        <form class="" asp-controller="Admin" asp-action="AddIoT" method="post" asp-route-type="idea" asp-route-id="@Model.Idea.IdeaId"}>
            <div class="form-row">
                <div class="col-3 text-center">
                    <input class="form-control"   id="autocomplete" oninput="inputAutocomplete()"/>
                </div>
                <div class="col-3 text-center">
                    <input class="form-control" required asp-for="Position.Lat" id="lat"/>
                </div>
                <div class="col-3 text-center">
                    <input class="form-control"  required asp-for="Position.Lng" id="lng"/>
                </div>
                <div class="col-3 text-center">
                    <input class="btn btn-primary btn-sm" type="submit" value="Voeg iot toe">
                </div>
            </div>
            </form>
            @if (Model.Position != null)
            {
                <div class="card">
                    <div id="map"></div>
                </div>
            }
        </div>
       
    </div>


</div>
<script>
    var first = true;
    function initAutocomplete() {
        var autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'));
        autocomplete.setComponentRestrictions({'country': 'be'});
        google.maps.event.addListener(autocomplete,
            'place_changed',
            function() {
                var place = autocomplete.getPlace();
                var lat = place.geometry.location.lat();
                var lng = place.geometry.location.lng();
                document.getElementById('lat').value = lat;
                document.getElementById('lng').value = lng;
                initMap();
            });
        

    }
    function initMap() {
        var position = {}
        if (first === true) {
              position = {lat: @Model.Position.Lat, lng: @Model.Position.Lng};
             first = false;
        } else {
           var lat = document.getElementById('lat').value.toString();
            var lng = document.getElementById('lng').value.toString();
            position = {lat: lat, lng: lng};
           alert("lat:" + lat + " lng:" + lng + " pos" + position);
        }
        // The location of Uluru
       
        

        // The map, centered at Uluru
        var map = new google.maps.Map(
            document.getElementById('map'), {zoom: 16, center: position});
        // The marker, positioned at Uluru
        var marker = new google.maps.Marker({position: position, map: map});  
    }
</script>
<script>
    function showHide(id) {
        var x = document.getElementById(id);
        if (x.style.display === 'none') {
            x.style.display = 'block';
        } else {
            x.style.display = 'none';
        }
    }

    function initMapsApi() {
        initAutocomplete();
        initMap();

    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places,drawing,geometry,visualization&key=AIzaSyBuYpAodlfpx5uWlMiFTMx3AG7DVRG-T0w&callback=initMapsApi">
</script>
@using Integratieproject1.Domain.Ideations
@using Integratieproject1.Domain.Users
@model Integratieproject1.Domain.Ideations.Idea

@{
    ViewBag.Title = "ideaPage";
    ViewBag.ideaId = Model.IdeaId;
    Layout = "/UI/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>
<p>votes: @Model.Votes.Count</p>
<p>number of reactions: @Model.Reactions.Count</p>
<a asp-area="" asp-controller="Project"
   asp-action="CreateVote" asp-route-voteType="@VoteType.VOTE" asp-route-ideaId="@Model.IdeaId"><button>vote</button>
</a>
<form asp-controller="Project" asp-action="CreateUserVote" asp-route-votType="@VoteType.VOTE" asp-route-ideaId="@Model.IdeaId">
    
      <select name="user">
        <option value="1">1</option>
    </select>
    <input type="submit" value="user vote">
</form>
@await Html.PartialAsync("_PostReactionPartial.cshtml", new Reaction())
<p>reactions: </p>
@foreach (var reaction in Model.Reactions)
{
    if(reaction.LoggedInUser.GetType() == typeof(Person))
    {
        Person person = (Person) reaction.LoggedInUser;
        <p>@person.LastName @person.FirstName.First()</p>
    }
    if (reaction.LoggedInUser.GetType() == typeof(Organisation))
    {
        Organisation organisation = (Organisation) reaction.LoggedInUser;
        <p>@organisation.OrganisationName</p>
    }
    <p></p>
    <p>@reaction.ReactionText</p>
    <p>total likes: @reaction.TotalLikes</p>
    <form asp-controller="Project" asp-action="LikeReaction" asp-route-ideaId="@Model.IdeaId" asp-route-reactionId="@reaction.ReactionId">
    
        <select name="user">
            <option value="1">1</option>
        </select>
        <input type="submit" value="like reactie">
    </form>
          
    
}

@*<script>
    function showHideCreateReaction() {
       if (document.getElementById("reaction").style.display === "none") {
           document.getElementById("reaction").style.display = "inline-block";
       } else {
           document.getElementById("reaction").style.display = "none";
       }
    }
</script>*@

@using Integratieproject1.Domain.Projects
@model Integratieproject1.Domain.Datatypes.Position

@{
    ViewBag.Title = "Wijzig Locatie";
}

<div>
    <div class="card">
        <div id="EditMap"></div>
        
            <form class="" asp-controller="Project" asp-action="EditPosition" asp-route-positionId="@Model.PositionId" asp-route-ideaId="@ViewBag.IdeaId" method="post">
                <div class=" d-flex flex-row justify-content-center ">
                    <div class="input-group">
                        <input class="form-control" id="autocompleteEdit" @*oninput="inputAutocomplete()*@"/>
                        <div class="input-group-append">
                            <button class="btn btn-success" type="submit"><i class="fa fa-check"></i></button>
                            <a class="btn btn-danger" asp-area="" asp-controller="Project"
                               asp-action="DeletePosition" asp-route-positionId="@Model.PositionId" asp-route-ideaId="@ViewBag.IdeaId">
                                <i class="fa fa-times"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <input class="form-control" hidden required placeholder="Breedtegraad" asp-for="Lat" id="lat"/>
                <input class="form-control" hidden required placeholder="Lengtegraad" asp-for="Lng" id="lng"/>
            </form>                
        
    </div>
    
</div>
<script>
    var markers = [];
    
    function initEditMap() {
        
        // The location of Uluru
        var position = {lat: @ViewBag.Position.Lat, lng: @ViewBag.Position.Lng};
        // The map, centered at Uluru
       var map = new google.maps.Map(
            document.getElementById('EditMap'), {zoom: 16, center: position});
        // The marker, positioned at Uluru
        var marker = new google.maps.Marker({position: position, map: map});
        markers.push(marker);
        
        google.maps.event.addListener(map, 'click', 
            function(event) {
                changeMarker(event.latLng, map);
            });
        initEditAutocomplete(map);
        
        
    }
    function initEditAutocomplete(map) {
        var autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocompleteEdit'));
        autocomplete.setComponentRestrictions({'country': 'be'});
        google.maps.event.addListener(autocomplete,
            'place_changed',
            function() {
                var place = autocomplete.getPlace();
                var lat = place.geometry.location.lat();
                var lng = place.geometry.location.lng();
                changeMarker(place.geometry.location,map);

            });
        
    }
    function changeMarker(coords,map) {
        clearMarkers();
        addMarker(coords, map);
        map.setCenter(coords);
        document.getElementById('lat').value = coords.lat();
        document.getElementById('lng').value = coords.lng();
    }
    function addMarker(coords, map) {
        var marker = new google.maps.Marker({ position: coords, map: map });
        marker.setLabel(N);
        markers.push(marker);
    }
    function clearMarkers() {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
            markers.pop(markers[i]);
        }
    }
</script>




